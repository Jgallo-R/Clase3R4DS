7 + 5
7 + 5
# RESTA
25 * 4
# MULTIPLICACION
25 * 4
install.packages("tidyverse")
library(tidyverse)
install.packages("tidycensus")
library(tidycensus)
edad <- 33
tiempo <- 10
class(edad)
edad <- 33.5
edad <- as.integer(edad)
class(edad)
Nombre <- "María"
class(edad)
Nombre <- "María"
#TIPOS DE DATOS
edad <- 33.5
class(edad)
edad <- as.integer(edad)
class(edad)
Nombre <- "María"
class(nombre)
class(Nombre)
casada TRUE
casada <- TRUE
casada <- FALSE
class(casada)
# Creacion #
edad <- c(12, 15, 14, 14, 16)
nombre <- c("Carlos", "Juana", "Antonio", "Sandra", "Leonardo")
sexo <- c("Masculino", "Femenino", "Masculino", "Femenino", "Masculino")
nota1 <- c(90, 75, 98, 79, 43)
nota2 <- c(74, 80, 93, 57, 62)
honor <- c(TRUE, FALSE, TRUE, FALSE, TRUE)
diferentes <- c(90, "Pedro", FALSE)
diferentes
diferentes2 <- c(1, TRUE, FALSE)
diferentes2
sum(honor)
mean(honor)
names(nombre) <- c("Estudiante 1",
"Estudiante 2",
"Estudiante 3",
"Estudiante 4",
"Estudiante 5")
nombre
nota1
nota2
nota1 + nota2
nota1 * 1.5
nota1 * 1.05
nota3 <- c(90, 62)
nota1 + nota3
nota3 <- c(90, 62)
nota1 + nota3
nota3 <- c(90, 95)
nota1 + nota3
nota3 <- c(90, 62)
nota1 + nota3
nota3 <- c(90, 62)
## VECTORES ## UNA SOLA DIMENSION - MISMO TIPOS DE DATOS - VIDEO 4
# Creacion #
edad <- c(12, 15, 14, 14, 16)
nombre <- c("Carlos", "Juana", "Antonio", "Sandra", "Leonardo")
sexo <- c("Masculino", "Femenino", "Masculino", "Femenino", "Masculino")
nota1 <- c(90, 75, 98, 79, 43)
nota2 <- c(74, 80, 93, 57, 62)
honor <- c(TRUE, FALSE, TRUE, FALSE, TRUE)
# Si no son del mismo tipo se aplica coerción
diferentes <- c(90, "Pedro", FALSE)
diferentes
diferentes2 <- c(1, TRUE, FALSE)
diferentes2
# Podemos tratar los TRUE and FALSE como 1 y 0
sum(honor)
mean(honor)
# Podemos asignarle nombres a un vector
names(nombre) <- c("Estudiante 1",
"Estudiante 2",
"Estudiante 3",
"Estudiante 4",
"Estudiante 5")
nombre
nota1
nota2
nota1 + nota2
nota1 * 1.05
# nota3 <- c(90, 62)
#
# nota1 + nota3
edad <- c(12, 15, 14, 14, 16)
nombre <- c("Carlos", "Juana", "Antonio", "Sandra", "Leonardo")
sexo <- c("Masculino", "Femenino", "Masculino", "Femenino", "Masculino")
nota1 <- c(90, 75, 98, 79, 43)
nota2 <- c(74, 80, 93, 57, 62)
honor <- c(TRUE, FALSE, TRUE, FALSE, TRUE)
diferentes <- c(90, "Pedro", FALSE)
diferentes
diferentes2 <- c(1, TRUE, FALSE)
diferentes2
sum(honor)
mean(honor)
names(nombre) <- c("Estudiante 1",
"Estudiante 2",
"Estudiante 3",
"Estudiante 4",
"Estudiante 5")
nombre
nota1
nota2
nota1 + nota2
nota1 * 1.05
nota1
nota1[1]
nota1[3]
nota1[1:2]
nota1 [c(1, 5)]
nombre ["Estudiante5"]
nombre ["Estudiante 5"]
notas_altas <- nota1 >= 90
nombre [notas_altas]
notas_altas <- nota1 >= 90
notas_altas
nombre [notas_altas]
edad <- c(12, 15, 14, 14)
nombre <- c("Carlos", "Juana", "Antonio", "Sandra")
sexo <- c("Masculino", "Femenino", "Masculino", "Femenino")
nota1 <- c(90, 75, 98, 79)
nota2 <- c(74, 80, 93, 57)
honor <- c(TRUE, FALSE, TRUE, FALSE)
diferentes <- c(90, "Carlos", FALSE)
diferentes
diferentes2 <- c(1, TRUE, FALSE)
diferentes2
sum(honor)
mean(honor)
names(nombre) <- c("Estudiante 1",
"Estudiante 2",
"Estudiante 3",
"Estudiante 4")
nombre
nota1
nota2
nota1 + nota2
nota1 * 1.05
nota3 <- c(90, 57)
nota1 + nota3
nota1
nota1[1]
nota1[3]
nota1[1:2]
nota1 [c(1, 5)]
nombre ["Estudiante 5"]
edad <- c(12, 15, 14, 14)
nombre <- c("Carlos", "Juana", "Antonio", "Sandra")
sexo <- c("Masculino", "Femenino", "Masculino", "Femenino")
nota1 <- c(90, 75, 98, 79)
nota2 <- c(74, 80, 93, 57)
honor <- c(TRUE, FALSE, TRUE, FALSE)
diferentes <- c(90, "Carlos", FALSE)
diferentes
diferentes2 <- c(1, TRUE, FALSE)
diferentes2
sum(honor)
mean(honor)
names(nombre) <- c("Estudiante 1",
"Estudiante 2",
"Estudiante 3",
"Estudiante 4")
nombre
nota1
nota2
nota1 + nota2
nota1 * 1.05
nota3 <- c(90, 57)
nota1 + nota3
nota1
nota1[1]
nota1[3]
nota1[1:2]
nota1 [c(1, 4)]
nombre ["Estudiante 4"]
notas_altas <- nota1 >= 90
notas_altas
nombre [notas_altas]
library(dplyr)
install.packages("car")
install.packages("qcc")
install.packages(rtools)
install.packages(Shiny)
install.packages("caret")
install.packages("randomforest")
install.packages("zoo")
install.packages("datos")
install.packages(c("nycflights13", "gapminder", "Lahman", "nasaweather", "babynames", "fueleconomy"))
edad <- c(12, 15, 14, 14)
nombre <- c("Carlos", "Juana", "Antonio", "Sandra")
sexo <- c("Masculino", "Femenino", "Masculino", "Femenino")
nota1 <- c(90, 75, 98, 79)
nota2 <- c(74, 80, 93, 57)
honor <- c(TRUE, FALSE, TRUE, FALSE)
library("readxl")
datos1 <- read_excel("C:/Users/JGALLO/Desktop/Consumo CRC.xlsx",sheet = 1)
datos1
library(readxl)
Proveedores <- read_excel("C:/Users/JGALLO/Desktop/Proveedores.xlsx",
col_types = c("text", "text", "text",
"text", "text", "text", "text", "text",
"numeric", "numeric", "text"))
View(Proveedores)
library("caret")
library("lattice")
library("ggplot2")
library("caret")
energy <- read.csv("energy.csv")
read.csv("energy.csv")
library(readr)
energy <- read_csv("R/energy.csv")
View(energy)
View(energy)
View(energy)
View(energy)
energy1 <- read.csv("C:/Users/JGALLO/Documents/R/energy.csv",sheet = 1)
energy1 <- read.csv("C:/Users/JGALLO/Documents/R/energy.csv",sheet = 1)
getwd()
library(installr)
updater()
q()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
installr()
library
library(installr)
q()
q()
q()
#### Datos y librerias ####
rm(list = ls())
rm(list = ls())
setwd("C:/Users/JGALLO\Desktop/Clase3R4DS")
setwd("C:/Users/JGALLO\Desktop/Clase3R4DS")
rm(list = ls())
setwd("C:/Users/JGALLO/Desktop/Clase3R4DS")
install.packages("vctrs")
library(dplyr)
storms <- read.csv("https://raw.githubusercontent.com/robintux/Datasets4StackOverFlowQuestions/master/storms.csv")
Pollution <- read.csv("https://raw.githubusercontent.com/robintux/Datasets4StackOverFlowQuestions/master/pollution.csv")
tb <- read.csv("https://raw.githubusercontent.com/robintux/Datasets4StackOverFlowQuestions/master/tb.csv")
View(tb)
#### Algunas funciones de dplyr #####
class(storms)
dim(storms)[1]
dim(storms)[2]
head(storms,n = 2)
tail(storms, n =3)
colnames(storms)
names(storms)
str(storms)
# Es notorio que la variable $date es una variable que represente
# a la linea del tiempo
class(storms$date)
storms$date <- as.Date(storms$date)
class(storms$date)
sleect(storms, storm, pressure)
select(storms, storm, pressure)
class(select(storms, storm, pressure))
select(storms, colnames(storms)[1], colnames(storms)[1])
select(storms, colnames(storms)[1], colnames(pressure)[1])
select(storms, colnames(storms)[1], colnames(pressure)[3])
select(storms, colnames(storms)[1], colnames(storms)[3])
# Utilizando la sintaxis matricial
storms[,c(1,3)]
# Para excluir una columna utilizamos el operador (unario) : -
select(storms, -storm)
# Con notacion matricial
storms[,-1]
storms[,c(-1,-3)]
storms[,-c(1,3)]
# Podemos utilizar la notacion : para seleccionar un rango de columnas
select(storms, wind:date)
select(storms, -(storm:wind))
# Selecciona las columnas cuyo nombre contiene un patron
select(storms, starts_with("w"))
# Seleccionamos la columna cuyo nombre termina con la letra "e"
select(storms, ends_with("e"))
# Seleccionamos todas las columnas
select(storms, everything())
# Seleccionamos columnas cuyo nombre contiene un string
select(storms, contains("essur"))
#### filter ####
# La funcion filter nos permite filtrar filas segun una condicion
filter(storms, wind >= 50)
filter(storms, wind >= 50, storm %in% c("Alberto","Alex","Alisson"))
filter(storms, wind >= 50, storm %in% c("Alberto","Alex","Allison"))
filter(storms, wind>=50 & pressure>100)
arrange(storms, wind)
# Para ordenar de forma descendente :
arrange(storms, desc(wind))
#### Rename #####
names(storms)
rename(storms, tormenta = storm, viento = wind, presion = pressure, fecha = date)
mutate(storms, ratio = pressure/wind)
StormsNuevo <- mutate(storms, ratio = pressure/wind)
mutate(storms, ratio = pressure/wind, inverse = ratio^-1)
StormsNuevo <- mutate(storms, ratio = pressure/wind, inverse = ratio^-1)
View(StormsNuevo)
mean(StormsNuevo$wind)
summarise(StormsNuevo)
summary(StormsNuevo)
summarise(pollution, mediana = median(amount), variance = var(amount))
View(Pollution)
summarise(pollution, mediana = median(amount), variance = var(amount))
summarise(Pollution, mediana = median(amount), variance = var(amount))
class(summarise(Pollution, mediana = median(amount), variance = var(amount)))
Pollution %>% summarise(mediana2 = median(amount), varianza = var(amount))
#### group by ####
Pollution
group_by(Pollution, city)
class(group_by(Pollution, city))
Pollution %>% group_by(city) %>%
summarise(media = mean(amount), sum(amount), n = n())
Info <- ollution %>% group_by(city) %>% # guardamos en DF INFO
summarise(media = mean(amount), sum(amount), n = n())
Info <- Pollution %>% group_by(city) %>% # guardamos en DF INFO
summarise(media = mean(amount), sum(amount), n = n())
View(Info)
class(Info)
install.packages("vctrs")
rm(list = ls())
# Setear el directorio de trabajo
# setwd()
getwd()
dir()
#### cargar la data ####
library(ggplot2)
library(car)
data("Salaries")
str(Salaries)
View(Salaries)
install.packages("carData")
library(help = car)
library(help = cardata)
library(carData)
library(help = carData)
str(Salaries)
summary(Salaries)
data("Salaries")
str(Salaries)
ggplot(data = Salaries, aes(x = yrs.service , y = salary))
ggplot(data = Salaries, aes(x= yrs.service , y = salary))
library(ggplot)
library(ggplot2)
ggplot(data = Salaries, aes(x= yrs.service , y = salary))
p <- ggplot(data = Salaries, aes(x= yrs.service , y = salary))
class(p)
p
p + geom_point()
p <- ggplot(data = Salaries, aes(x= yrs.service , y = salary, fill = sex))
p + geom_point()
p + geom_point(shape = 25, size = 1.8)
p + geom_point(shape = 25, size = 2.8)
p + geom_point(aes(shape  = sex, col = sex))
p + geom_point(aes(shape  = sex, col = sex), size = 3)
p + geom_point(aes(shape  = sex, col = sex), size = 3) +
scale_shape_manual(values = c(3,16))
p + geom_point(aes(shape  = sex, col = sex), size = 3) +
scale_shape_manual(values = c(4,21))
p + geom_point(aes(shape  = sex, col = sex), size = 3) +
scale_shape_manual(values = c(4,21)) +
scale_color_manual(values = c("red","#5C7A54"))
p + geom_point(aes(shape  = sex, col = sex), size = 3) +
scale_shape_manual(values = c(4,21)) +
scale_color_manual(values = c("red","#5C7A10"))
p + geom_point(aes(shape  = sex, col = sex), size = 3) +
scale_shape_manual(values = c(4,21)) +
scale_color_manual(values = c("red","#5C7A99"))
p + geom_point(aes(shape  = sex, col = sex), size = 3) +
scale_shape_manual(values = c(4,21)) +
scale_color_manual(values = c("red","#5C7A99")) +
theme(legend.position = "left")
p + geom_point(aes(shape  = sex, col = sex), size = 3) +
scale_shape_manual(values = c(4,21)) +
scale_color_manual(values = c("red","#5C7A99")) +
theme(legend.position = "top")
p + geom_point(aes(shape  = sex, col = sex), size = 3) +
scale_shape_manual(values = c(4,21)) +
scale_color_manual(values = c("red","#5C7A01")) +
theme(legend.position = "bottom")
p + geom_point(aes(shape  = sex, col = sex), size = 3) +
scale_shape_manual(values = c(4,21)) +
# scale_color_manual(values = c("red","#5C7B01")) +
# theme(legend.position = "left")
# theme(legend.position = "top")
# theme(legend.position = "bottom")
theme(legend.position = c(0.93, 0.95))
p + geom_point(aes(shape  = sex, col = sex), size = 3) +
scale_shape_manual(values = c(4,21)) +
# scale_color_manual(values = c("red","#5C7B01")) +
# theme(legend.position = "left")
# theme(legend.position = "top")
# theme(legend.position = "bottom")
theme(legend.position = c(0.95, 0.9))
help(ggsave)
ggsave(filename = "Grafico3.png")
